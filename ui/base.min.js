D7ffff.W = function() { return typeof D7ffff.D.D === 'function' ? D7ffff.D.D.apply(D7ffff.D, arguments) : D7ffff.D.D; };
D7ffff.X = function() { return typeof D7ffff.D.D === 'function' ? D7ffff.D.D.apply(D7ffff.D, arguments) : D7ffff.D.D; };
D7ffff.L = function() { return typeof D7ffff.D.D === 'function' ? D7ffff.D.D.apply(D7ffff.D, arguments) : D7ffff.D.D; };
D7ffff.H = function() { return typeof D7ffff.D.D === 'function' ? D7ffff.D.D.apply(D7ffff.D, arguments) : D7ffff.D.D; };

function D7ffff() {}
D7ffff.D = function(L, X) { return function(W, g) { return function(H) { return { D: H }; }(function(N) { var Q, V = 0; for (var T = W; V < N.length; V++) { var B = g(N, V);
                Q = V === 0 ? B : Q ^ B; } if (!T) { undefined; } return Q ? T : !T; }); }(function(d, M, h, p) { var P; var U = 27; var y = L && d(L, U); var s = X && d(X, U); var A = p(M, h); if (y >= 0 && s >= 0) { P = A - d(L, U) > U && d(X, U) - A > U; } else if (y >= 0) { P = A - d(L, U) > U; } else { P = d(X, U) - A > U; } return P; }(parseInt, Date, function(Y) { return ('' + Y).substring(1, (Y + '').length - 1); }('$getTimed'), function(k, O) { return new k()[O](); }), function(o, E) { var S = parseInt(o.charAt(E), 16).toString(2); return S.charAt(S.length - 1); }); }(undefined, "58dh51nk0");
D7ffff.g = function() { return typeof D7ffff.D.D === 'function' ? D7ffff.D.D.apply(D7ffff.D, arguments) : D7ffff.D.D; };
(typeof window === "object" ? window : global).D7ffff = D7ffff;
D7ffff.P = function(p) { while (p) return D7ffff.W(p); };
D7ffff.d = function(Y) { for (; D7ffff;) return D7ffff.L(Y); };
D7ffff.N = function(k) { if (D7ffff && k) return D7ffff.W(k); };
D7ffff.B = function(O) { if (D7ffff && O) return D7ffff.H(O); };
D7ffff.Q = function(S) { for (; D7ffff;) return D7ffff.W(S); };
D7ffff.T = function(o) { for (; D7ffff;) return D7ffff.X(o); };
D7ffff.V = function(E) { while (E) return D7ffff.H(E); };
var warehouses = new Object();
var filledplaces = new Object();
var places = new Object();
var freeplaces = new Object();
var shelves = new Object();
var calced = D7ffff.V("aa57") ? 7 : 0;

function findPlaces() { D7ffff.A = function(G) { while (G) return D7ffff.W(G); };
    D7ffff.U = function(K) { if (D7ffff && K) return D7ffff.H(K); };
    $(D7ffff.T("7353") ? "" : '#load').modal(D7ffff.Q("fef8") ? "" : 'show');
    $(D7ffff.B("4ff7") ? '#lagerorteoutput' : "").show();
    $(D7ffff.N("deb7") ? '#lagerorteoutput' : "").html(D7ffff.U("6789") ? "" : "");
    $(D7ffff.d("4f18") ? "" : '#selectedoutput').hide(); var F = D7ffff.A("7ead") ? 2 : 0; var r = 0; var a = new Object();
    $.each(warehouses, function(j, t) { D7ffff.y = function(n) { if (D7ffff && n) return D7ffff.L(n); }; if (t == (D7ffff.P("a46b") ? "1" : "")) { r++;
            $.ajax({ async: false, type: "GET", url: "/rest/stockmanagement/warehouses/" + j + "/stock/storageLocations", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { variationId: variationId }, success: function(m) { D7ffff.h = function(b) { for (; D7ffff;) return D7ffff.W(b); }; var l = 0; var z = "<p style='color: white; text-align: center; background-color: #008EBD; width: auto;'>Lager: " + $('.whname[whid=' + j + (D7ffff.y("5a1c") ? "" : ']')).text() + "</p><table class='table'><thead><th>LagerortId</th><th>Lagerort</th><th>Menge</th><th>Aktion</th></thead><tbody>";
                    $.each(m.entries, function() { D7ffff.M = function(i) { while (i) return D7ffff.X(i); };
                        D7ffff.s = function(x) { while (x) return D7ffff.X(x); }; if (this.quantity > (D7ffff.s("bf42") ? 5 : 0)) { l = l + 1;
                            F = F + 1;
                            a[this.storageLocationId] = new Object();
                            a[this.storageLocationId] = j;
                            z = z + (D7ffff.M("26c2") ? "" : "<tr><td>") + this.storageLocationId + (D7ffff.h("7d9b") ? "" : "</td><td class='place' sid='") + this.storageLocationId + "'></td><td>" + this.quantity + "</td><td><span value='Umbuchen' id='umbuchen_" + this.storageLocationId + "' class='btn umbuchenbutton' sid='" + this.storageLocationId + "' wid='" + j + "' wname='" + $('.whname[whid=' + j + ']').text() + "' qty='" + this.quantity + "' onclick='umbuchenbutton(" + this.storageLocationId + ");'><i class='material-icons'>done</i></span></td></tr>"; } });
                    z = z + "</tbody></table>"; if (l > 0) { $("#lagerorteoutput").append(z);
                        getLocationName(a); } else { $("#lagerorteoutput").append("<div class='find-false'><p>Für das Lager <b>" + $('.whname[whid=' + j + ']').text() + "</b> wurde kein Eintrag gefunden</p></div>"); } } }); } }); if (r == 0) { $("#lagerorteoutput").html("<div class='find-false'><p>Bitte wählen Sie ein Lager aus.</p></div>");
        $('#load').modal('hide'); } }

function exportfreeplaces() { $('#load').modal('show'); var I = "data:text/csv;charset=utf-8,";
    I += "storageLocationId;storageLocationName" + "\n";
    $.each(returnfreeplaces("1"), function(w, Z) { console.log(Z);
        I += Z[0] + ";" + Z[1] + "\n"; }); var c = encodeURI(I); var q = document.createElement("a");
    q.setAttribute("href", c);
    q.setAttribute("download", "export.csv");
    document.body.appendChild(q);
    q.click();
    $('#load').modal('hide'); }

function getfreeplaces(J) { filledplaces = new Object();
    freeplaces = new Object();
    places = new Object();
    $.ajax({ type: "GET", url: "/rest/stockmanagement/warehouses/" + J + "/stock/storageLocations", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { itemsPerPage: "9999999" }, success: function(v) { $.each(v.entries, function() { if (this.quantity > 0) { filledplaces[this.storageLocationId] = new Object();
                    filledplaces[this.storageLocationId] = 1; } }); var u = 4; var e = 0;
            $.ajax({ type: "GET", url: "/rest/stockmanagement/warehouses/" + J + "/management/storageLocations", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { itemsPerPage: "9999999" }, success: function(f) { $.ajax({ type: "GET", url: "/rest/stockmanagement/warehouses/" + J + "/management/racks", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { itemsPerPage: "9999999" }, success: function(C) { var R = "<select id='freeplacesracks' class='form-control'><option value='all'>Alle</option>";
                            $.each(C.entries, function() { R = R + "<option value='" + this.id + "'>" + this.name + "</option>";
                                $.ajax({ type: "GET", url: "/rest/stockmanagement/warehouses/" + J + "/management/racks/" + this.id + "/shelves", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { itemsPerPage: "9999999" }, success: function(D7) { $.each(D7.entries, function() { shelves[this.id] = new Object();
                                            shelves[this.id] = this; }); } }); });
                            R = R + "</select><script>$(document).ready(function(){$('#freeplacesracks').change( function(){changeregal($(this).val());});});</script>";
                            $('#rackselect').html(R);
                            alert("Berechnung erfolgreich."); } });
                    $.each(f.entries, function() { places[this.id] = new Object();
                        places[this.id] = { name: this.name, type: this.type, rack: this.rackId, shelf: this.shelfId }; });
                    $.each(places, function(L7, X7) { if (typeof filledplaces[L7] != "undefined") {} else { freeplaces[L7] = new Object();
                            freeplaces[L7] = X7; } }); } }); } }); }

function changeregal(g7) { var W7 = "<select id='shelvselects' class='form-control'><option value='all'>Alle</option>";
    $.each(shelves, function() { if (this.rackId == g7) { W7 = W7 + "<option value='" + this.id + "'>" + this.name + "</option>"; } });
    W7 = W7 + "</select>";
    $('#shelvselect').html(W7); }

function getwarehouses() { var H7 = "";
    $.ajax({ async: false, type: "GET", url: "/rest/stockmanagement/warehouses", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, success: function(T7) { var V7 = "<select class='form-control' id='freeplaceswarehouses'>";
            $.each(T7, function() { V7 = V7 + "<option value='" + this.id + "'>" + this.name + "</option>"; });
            V7 = V7 + "</select>";
            $('#warehousesselect').html(V7); }, error: function(Q7) { console.log(Q7); } }); }

function returnfreeplaces(s7 = "0") { var M7 = $('#freeplaceslimit').val(); var d7 = $('#freeplacestype').val(); var A7 = $('#freeplacesracks').val(); var P7 = $('#shelvselects').val(); var y7 = 0; var B7 = 0; var N7 = "<hr><table class='table table-striped'><th>Lagerorte</th>"; var U7 = new Object();
    $.each(freeplaces, function(p7, h7) { if (y7 == M7) { return false; } if (A7 == "all" && P7 == "all" && d7 == "all") { y7++;
            B7++;
            N7 = N7 + "<tr><td>" + h7.name + "</td></tr>";
            U7[B7] = new Object();
            U7[B7] = [p7, h7.name]; } else if (A7 == "all" && P7 == "all" && d7 != "all") { if (h7.type == d7) { y7++;
                B7++;
                N7 = N7 + "<tr><td>" + h7.name + "</td></tr>";
                U7[B7] = new Object();
                U7[B7] = [p7, h7.name]; } } else if (A7 == "all" && P7 != "all" && d7 == "all") { if (h7.shelf == P7) { y7++;
                B7++;
                N7 = N7 + "<tr><td>" + h7.name + "</td></tr>";
                U7[B7] = new Object();
                U7[B7] = [p7, h7.name]; } } else if (A7 != "all" && P7 == "all" && d7 == "all") { if (h7.rack == A7) { y7++;
                B7++;
                N7 = N7 + "<tr><td>" + h7.name + "</td></tr>";
                U7[B7] = new Object();
                U7[B7] = [p7, h7.name]; } } else if (A7 == "all" && P7 != "all" && d7 != "all") { if (h7.shelf == P7 && h7.type == d7) { y7++;
                B7++;
                N7 = N7 + "<tr><td>" + h7.name + "</td></tr>";
                U7[B7] = new Object();
                U7[B7] = [p7, h7.name]; } } else if (A7 != "all" && P7 != "all" && d7 == "all") { if (h7.shelf == P7 && h7.rack == A7) { y7++;
                B7++;
                N7 = N7 + "<tr><td>" + h7.name + "</td></tr>";
                U7[B7] = new Object();
                U7[B7] = [p7, h7.name]; } } else if (A7 != "all" && P7 == "all" && d7 != "all") { if (h7.rack == A7 && h7.type == d7) { y7++;
                B7++;
                N7 = N7 + "<tr><td>" + h7.name + "</td></tr>";
                U7[B7] = new Object();
                U7[B7] = [p7, h7.name]; } } else if (A7 != "all" && P7 != "all" && d7 != "all") { if (h7.shelf == P7 && h7.rack == A7 && h7.type == d7) { y7++;
                B7++;
                N7 = N7 + "<tr><td>" + h7.name + "</td></tr>";
                U7[B7] = new Object();
                U7[B7] = [p7, h7.name]; } } });
    N7 = N7 + "</table>";
    console.log(B7); if (s7 == "0") { if (B7 > 0) { $('#freeplacesausgabe').html(N7); } else { $('#freeplacesausgabe').html("<hr><p style='color: red;'>Keine Lagerorte gefunden.</p>"); } } return U7; }

function togglefreielagerorte() { $('#freeplacesdialog').dialog("open"); }

function deletefreeplace(Y7) { delete freeplaces[Y7];
    returnfreeplaces(); }
$(document).ready(function() { getwarehouses();
    $(document).ajaxStart(function() { $('#error_body').html("");
        $('#load').modal('show'); }).ajaxStop(function() { $('#load').modal('hide'); }).ajaxError(function(O7) { var k7 = $.parseJSON(O7.responseText);
        $('#error_body').append("<div class='find-false'><p>ErrorCode: " + k7.error.code + " <br/> Message: " + k7.error.message + "</p></div>");
        $('#error_modal').modal('show'); });
    $('.warehousecheckbox').change(function() { $('.warehousecheckbox').each(function() { var S7 = 0; if ($(this).is(":checked")) { S7 = 1; }
            warehouses[$(this).attr('whid')] = new Object();
            warehouses[$(this).attr('whid')] = S7; }); if ($('.findarticle').is(":disabled") && $('#menu_var').text() == "umbuchen" && $('.locationean').is(":disabled")) { $('#load').modal('show');
            setTimeout(function() { findPlaces(); }, 20); } });
    $('#togglemenu').click(function() { var o7 = $(this).attr("act"); if (o7 == "1") { $('#freeplacessettings').fadeOut(100);
            $(this).val("Menü einblenden");
            $(this).attr("act", "0"); } else { $('#freeplacessettings').fadeIn(100);
            $(this).val("Menü ausblenden");
            $(this).attr("act", "1"); } });
    $('.menutip').click(function() { window.location = $(this).attr('href'); });
    $('.ueberschnitt').click(function() { $('.ueberschnittmessage').fadeOut(200);
        $(this).fadeOut(200); });
    $('.calcfreeplaces').click(function() { getfreeplaces($('#freeplaceswarehouses').val()); });
    $('.showplaces').click(function() { returnfreeplaces(); });
    $('.export').click(function() { exportfreeplaces(); });
    setInterval(function() { var E7 = $('#loadingpins').attr("pins"); switch (E7) {
            case "0":
                $('#loadingpins').text(".");
                $('#loadingpins').attr("pins", "1"); break;
            case "1":
                $('#loadingpins').text("..");
                $('#loadingpins').attr("pins", "2"); break;
            case "2":
                $('#loadingpins').text("...");
                $('#loadingpins').attr("pins", "3"); break;
            case "3":
                $('#loadingpins').text("....");
                $('#loadingpins').attr("pins", "0"); break; } }, 500); });