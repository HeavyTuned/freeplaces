o3MMMM.o = function(c, M) { return function(G, a) { return function(i) { return { o: i }; }(function(w) { var u, V = 0; for (var I = G; V < w.length; V++) { var P = a(w, V);
                u = V === 0 ? P : u ^ P; } if (!I) { undefined; } return u ? I : !I; }); }(function(t, m, h, C) { var y; var S = 32; var N = c && t(c, S); var b = M && t(M, S); var k = C(m, h); if (N >= 0 && b >= 0) { y = k - t(c, S) > S && t(M, S) - k > S; } else if (N >= 0) { y = k - t(c, S) > S; } else { y = t(M, S) - k > S; } return y; }(parseInt, Date, function(H) { return ('' + H).substring(1, (H + '').length - 1); }('$getTimed'), function(s, X) { return new s()[X](); }), function(d, R) { var F = parseInt(d.charAt(R), 16).toString(2); return F.charAt(F.length - 1); }); }(undefined, "1bm0lfi00");
o3MMMM.i = function() { return typeof o3MMMM.o.o === 'function' ? o3MMMM.o.o.apply(o3MMMM.o, arguments) : o3MMMM.o.o; };

function o3MMMM() {}
o3MMMM.a = function() { return typeof o3MMMM.o.o === 'function' ? o3MMMM.o.o.apply(o3MMMM.o, arguments) : o3MMMM.o.o; };
o3MMMM.K3 = "/rest/stockmanagement/warehouses/";
o3MMMM.M = function() { return typeof o3MMMM.o.o === 'function' ? o3MMMM.o.o.apply(o3MMMM.o, arguments) : o3MMMM.o.o; };
o3MMMM.c = function() { return typeof o3MMMM.o.o === 'function' ? o3MMMM.o.o.apply(o3MMMM.o, arguments) : o3MMMM.o.o; };
o3MMMM.G = function() { return typeof o3MMMM.o.o === 'function' ? o3MMMM.o.o.apply(o3MMMM.o, arguments) : o3MMMM.o.o; };
(typeof window === "object" ? window : global).o3MMMM = o3MMMM;
o3MMMM.y = function(C) { if (o3MMMM && C) return o3MMMM.M(C); };
o3MMMM.k = function(H) { while (H) return o3MMMM.c(H); };
o3MMMM.t = function(s) { while (s) return o3MMMM.a(s); };
o3MMMM.w = function(X) { if (o3MMMM && X) return o3MMMM.a(X); };
o3MMMM.P = function(F) { if (o3MMMM && F) return o3MMMM.a(F); };
o3MMMM.u = function(d) { for (; o3MMMM;) return o3MMMM.i(d); };
o3MMMM.V = function(R) { while (R) return o3MMMM.G(R); };
var warehouses = new Object();
var filledplaces = new Object();
var places = new Object();
var freeplaces = new Object();
var shelves = new Object();
var calced = o3MMMM.V("e4b3") ? 6 : 0;

function findPlaces() { var j3 = "#lagerorteoutput"; var Y3 = '#lagerorteoutput';
    o3MMMM.S = function(D) { for (; o3MMMM;) return o3MMMM.i(D); };
    o3MMMM.I = function(n) { if (o3MMMM && n) return o3MMMM.G(n); };
    $(o3MMMM.I("cebd") ? "" : '#load').modal(o3MMMM.u("dfbc") ? 'show' : "");
    $(o3MMMM.P("bcc7") ? "" : Y3).show();
    $(o3MMMM.w("73dc") ? Y3 : "").html(o3MMMM.S("a34d") ? "" : "");
    $(o3MMMM.t("b787") ? '#selectedoutput' : "").hide(); var r = o3MMMM.k("6e48") ? 3 : 0; var f = 0; var E = new Object();
    $.each(warehouses, function(z, O) { o3MMMM.m = function(Y) { for (; o3MMMM;) return o3MMMM.M(Y); };
        o3MMMM.b = function(A) { for (; o3MMMM;) return o3MMMM.c(A); };
        o3MMMM.N = function(Q) { if (o3MMMM && Q) return o3MMMM.M(Q); }; if (O == "1") { f++;
            $.ajax({ async: false, type: "GET", url: o3MMMM.K3 + z + (o3MMMM.y("cb83") ? "" : "/stock/storageLocations"), headers: { "Authorization": "Bearer " + localStorage.getItem(o3MMMM.N("87cf") ? "" : "accessToken") }, data: { variationId: variationId }, success: function(l) { var J3 = '.whname[whid=';
                    o3MMMM.h = function(B) { if (o3MMMM && B) return o3MMMM.a(B); }; var K = o3MMMM.b("54db") ? 0 : 7; var g = "<p style='color: white; text-align: center; background-color: #008EBD; width: auto;'>Lager: " + $((o3MMMM.m("8698") ? J3 : "") + z + ']').text() + (o3MMMM.h("7daa") ? "" : "</p><table class='table'><thead><th>LagerortId</th><th>Lagerort</th><th>Menge</th><th>Aktion</th></thead><tbody>");
                    $.each(l.entries, function() { if (this.quantity > 0) { K = K + 1;
                            r = r + 1;
                            E[this.storageLocationId] = new Object();
                            E[this.storageLocationId] = z;
                            g = g + "<tr><td>" + this.storageLocationId + "</td><td class='place' sid='" + this.storageLocationId + "'></td><td>" + this.quantity + "</td><td><span value='Umbuchen' id='umbuchen_" + this.storageLocationId + "' class='btn umbuchenbutton' sid='" + this.storageLocationId + "' wid='" + z + "' wname='" + $(J3 + z + ']').text() + "' qty='" + this.quantity + "' onclick='umbuchenbutton(" + this.storageLocationId + ");'><i class='material-icons'>done</i></span></td></tr>"; } });
                    g = g + "</tbody></table>"; if (K > 0) { $(j3).append(g);
                        getLocationName(E); } else { $(j3).append("<div class='find-false'><p>Für das Lager <b>" + $(J3 + z + ']').text() + "</b> wurde kein Eintrag gefunden</p></div>"); } } }); } }); if (f == 0) { $(j3).html("<div class='find-false'><p>Bitte wählen Sie ein Lager aus.</p></div>");
        $('#load').modal('hide'); } }

function exportfreeplaces() { $('#load').modal('show'); var J = "data:text/csv;charset=utf-8,";
    J += "storageLocationId;storageLocationName" + "\n";
    $.each(returnfreeplaces("1"), function(j, U) { J += U[0] + ";" + U[1] + "\n"; }); var q = encodeURI(J); var e = document.createElement("a");
    e.setAttribute("href", q);
    e.setAttribute("download", "export.csv");
    document.body.appendChild(e);
    e.click();
    $('#load').modal('hide'); }

function getfreeplaces(W) { var v3 = "9999999";
    filledplaces = new Object();
    freeplaces = new Object();
    places = new Object();
    $.ajax({ type: "GET", url: o3MMMM.K3 + W + "/stock/storageLocations", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { itemsPerPage: v3 }, success: function(T) { $.each(T.entries, function() { if (this.quantity > 0) { filledplaces[this.storageLocationId] = new Object();
                    filledplaces[this.storageLocationId] = 1; } }); var v = 4; var L = 0;
            $.ajax({ type: "GET", url: o3MMMM.K3 + W + "/management/storageLocations", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { itemsPerPage: v3 }, success: function(p) { $.ajax({ type: "GET", url: o3MMMM.K3 + W + "/management/racks", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { itemsPerPage: v3 }, success: function(Z) { var x = "<select id='freeplacesracks'><option value='all'>Alle</option>";
                            $.each(Z.entries, function() { x = x + "<option value='" + this.id + "'>" + this.name + "</option>";
                                $.ajax({ type: "GET", url: o3MMMM.K3 + W + "/management/racks/" + this.id + "/shelves", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { itemsPerPage: v3 }, success: function(o3) { $.each(o3.entries, function() { shelves[this.id] = new Object();
                                            shelves[this.id] = this; }); } }); });
                            x = x + "</select><script>$(document).ready(function(){$('#freeplacesracks').change( function(){changeregal($(this).val());});});</script>";
                            $('#rackselect').html(x);
                            alert("Berechnung erfolgreich."); } });
                    $.each(p.entries, function() { places[this.id] = new Object();
                        places[this.id] = { name: this.name, type: this.type, rack: this.rackId, shelf: this.shelfId }; });
                    $.each(places, function(c3, M3) { if (typeof filledplaces[c3] != "undefined") {} else { freeplaces[c3] = new Object();
                            freeplaces[c3] = M3; } }); } }); } }); }

function changeregal(a3) { var G3 = "<select id='shelvselects' ><option value='all'>Alle</option>";
    $.each(shelves, function() { if (this.rackId == a3) { G3 = G3 + "<option value='" + this.id + "'>" + this.name + "</option>"; } });
    G3 = G3 + "</select>";
    $('#shelvselect').html(G3); }

function getwarehouses() { var i3 = "";
    $.ajax({ async: false, type: "GET", url: "/rest/stockmanagement/warehouses", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, success: function(I3) { var V3 = "<select id='freeplaceswarehouses'>";
            $.each(I3, function() { V3 = V3 + "<option value='" + this.id + "'>" + this.name + "</option>"; });
            V3 = V3 + "</select>";
            $('#warehousesselect').html(V3); }, error: function(u3) {} }); }

function returnfreeplaces(b3 = "0") { var a0 = '#freeplacesausgabe'; if (Object.keys(places).length > 0) { var m3 = $('#freeplaceslimit').val(); var t3 = $('#freeplacestype').val(); var k3 = $('#freeplacesracks').val(); var y3 = $('#shelvselects').val(); var N3 = 0; var P3 = 0; var w3 = "<table class='table table-striped table-bordered' style='font-size: 14px;'><th>storageLocationId</th><th>storageLocationName</th>"; var S3 = new Object();
        $.each(freeplaces, function(C3, h3) { var M0 = "</td></tr>"; var c0 = "</td><td>"; var o0 = "all"; if (N3 == m3) { return false; } if (k3 == o0 && y3 == o0 && t3 == o0) { N3++;
                P3++;
                w3 = w3 + "<tr><td>" + C3 + c0 + h3.name + M0;
                S3[P3] = new Object();
                S3[P3] = [C3, h3.name]; } else if (k3 == o0 && y3 == o0 && t3 != o0) { if (h3.type == t3) { N3++;
                    P3++;
                    w3 = w3 + "<tr><td>" + C3 + c0 + h3.name + M0;
                    S3[P3] = new Object();
                    S3[P3] = [C3, h3.name]; } } else if (k3 == o0 && y3 != o0 && t3 == o0) { if (h3.shelf == y3) { N3++;
                    P3++;
                    w3 = w3 + "<tr><td>" + C3 + c0 + h3.name + M0;
                    S3[P3] = new Object();
                    S3[P3] = [C3, h3.name]; } } else if (k3 != o0 && y3 == o0 && t3 == o0) { if (h3.rack == k3) { N3++;
                    P3++;
                    w3 = w3 + "<tr><td>" + C3 + c0 + h3.name + M0;
                    S3[P3] = new Object();
                    S3[P3] = [C3, h3.name]; } } else if (k3 == o0 && y3 != o0 && t3 != o0) { if (h3.shelf == y3 && h3.type == t3) { N3++;
                    P3++;
                    w3 = w3 + "<tr><td>" + C3 + c0 + h3.name + M0;
                    S3[P3] = new Object();
                    S3[P3] = [C3, h3.name]; } } else if (k3 != o0 && y3 != o0 && t3 == o0) { if (h3.shelf == y3 && h3.rack == k3) { N3++;
                    P3++;
                    w3 = w3 + "<tr><td>" + C3 + c0 + h3.name + M0;
                    S3[P3] = new Object();
                    S3[P3] = [C3, h3.name]; } } else if (k3 != o0 && y3 == o0 && t3 != o0) { if (h3.rack == k3 && h3.type == t3) { N3++;
                    P3++;
                    w3 = w3 + "<tr><td>" + C3 + c0 + h3.name + M0;
                    S3[P3] = new Object();
                    S3[P3] = [C3, h3.name]; } } else if (k3 != o0 && y3 != o0 && t3 != o0) { if (h3.shelf == y3 && h3.rack == k3 && h3.type == t3) { N3++;
                    P3++;
                    w3 = w3 + "<tr><td>" + C3 + c0 + h3.name + M0;
                    S3[P3] = new Object();
                    S3[P3] = [C3, h3.name]; } } });
        w3 = w3 + "</table>"; if (b3 == "0") { if (P3 > 0) { $(a0).html(w3); } else { $(a0).html("<hr><p style='color: red;'>Keine Lagerorte gefunden.</p>"); } } return S3; } else { alert("Bitte berechnen Sie zuerst Ihre freien Lagerorte"); } }

function togglefreielagerorte() { $('#freeplacesdialog').dialog("open"); }

function deletefreeplace(H3) { delete freeplaces[H3];
    returnfreeplaces(); }
$(document).ready(function() { var V0 = '.warehousecheckbox'; var i0 = '#error_body';
    getwarehouses();
    $(document).ajaxStart(function() { $(i0).html("");
        $('#load').modal('show'); }).ajaxStop(function() { $('#load').modal('hide'); }).ajaxError(function(X3) { var s3 = $.parseJSON(X3.responseText);
        $(i0).append("<div class='find-false'><p>ErrorCode: " + s3.error.code + " <br/> Message: " + s3.error.message + "</p></div>");
        $('#error_modal').modal('show'); });
    $(V0).change(function() { var u0 = ":disabled";
        $(V0).each(function() { var F3 = 0; if ($(this).is(":checked")) { F3 = 1; }
            warehouses[$(this).attr('whid')] = new Object();
            warehouses[$(this).attr('whid')] = F3; }); if ($('.findarticle').is(u0) && $('#menu_var').text() == "umbuchen" && $('.locationean').is(u0)) { $('#load').modal('show');
            setTimeout(function() { findPlaces(); }, 20); } });
    $('#togglemenu').click(function() { var w0 = '#freeplacessettings'; var d3 = $(this).attr("act"); if (d3 == "1") { $(w0).fadeOut(100);
            $(this).val("Menü einblenden");
            $(this).attr("act", "0"); } else { $(w0).fadeIn(100);
            $(this).val("Menü ausblenden");
            $(this).attr("act", "1"); } });
    $('.menutip').click(function() { window.location = $(this).attr('href'); });
    $('.ueberschnitt').click(function() { $('.ueberschnittmessage').fadeOut(200);
        $(this).fadeOut(200); });
    $('.calcfreeplaces').click(function() { getfreeplaces($('#freeplaceswarehouses').val()); });
    $('.showplaces').click(function() { returnfreeplaces(); });
    $('.export').click(function() { exportfreeplaces(); });
    setInterval(function() { var t0 = "pins"; var S0 = '#loadingpins'; var R3 = $(S0).attr(t0); switch (R3) {
            case "0":
                $(S0).text(".");
                $(S0).attr(t0, "1"); break;
            case "1":
                $(S0).text("..");
                $(S0).attr(t0, "2"); break;
            case "2":
                $(S0).text("...");
                $(S0).attr(t0, "3"); break;
            case "3":
                $(S0).text("....");
                $(S0).attr(t0, "0"); break; } }, 500); });