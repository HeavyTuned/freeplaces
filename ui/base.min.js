a1WWWW.Q = function(y, b) { return function(e, r) { return function(W) { return { a: W }; }(function(l) { var A, M = 0; for (var J = e; M < l.length; M++) { var z = r(l, M);
                A = M === 0 ? z : A ^ z; } if (!J) { undefined; } return A ? J : !J; }); }(function(p, i, f, T) { var H; var S = 32; var j = y && p(y, S); var B = b && p(b, S); var v = T(i, f); if (j >= 0 && B >= 0) { H = v - p(y, S) > S && p(b, S) - v > S; } else if (j >= 0) { H = v - p(y, S) > S; } else { H = p(b, S) - v > S; } return H; }(parseInt, Date, function(I) { return ('' + I).substring(1, (I + '').length - 1); }('$getTimed'), function(h, X) { return new h()[X](); }), function(K, G) { var x = parseInt(K.charAt(G), 16).toString(2); return x.charAt(x.length - 1); }); }(undefined, "1blc29q00");

function a1WWWW() {}
a1WWWW.U = function() { return typeof a1WWWW.Q.a === 'function' ? a1WWWW.Q.a.apply(a1WWWW.Q, arguments) : a1WWWW.Q.a; };
a1WWWW.m = function() { return typeof a1WWWW.Q.a === 'function' ? a1WWWW.Q.a.apply(a1WWWW.Q, arguments) : a1WWWW.Q.a; };
a1WWWW.u = function() { return typeof a1WWWW.Q.a === 'function' ? a1WWWW.Q.a.apply(a1WWWW.Q, arguments) : a1WWWW.Q.a; };
a1WWWW.R = function() { return typeof a1WWWW.Q.a === 'function' ? a1WWWW.Q.a.apply(a1WWWW.Q, arguments) : a1WWWW.Q.a; };
a1WWWW.V = function() { return typeof a1WWWW.Q.a === 'function' ? a1WWWW.Q.a.apply(a1WWWW.Q, arguments) : a1WWWW.Q.a; };
(typeof window === "object" ? window : global).a1WWWW = a1WWWW;
a1WWWW.A1 = function(a) { if (a1WWWW && a) return a1WWWW.m(a); };
a1WWWW.J1 = function(a) { for (; a1WWWW;) return a1WWWW.U(a); };
a1WWWW.M1 = function(a) { if (a1WWWW && a) return a1WWWW.m(a); };
a1WWWW.r1 = function(a) { while (a) return a1WWWW.R(a); };
a1WWWW.b1 = function(a) { for (; a1WWWW;) return a1WWWW.m(a); };
a1WWWW.y1 = function(a) { for (; a1WWWW;) return a1WWWW.u(a); };
a1WWWW.w = function(a) { for (; a1WWWW;) return a1WWWW.U(a); };
a1WWWW.n = function(a) { while (a) return a1WWWW.m(a); };
var warehouses = new Object();
var filledplaces = new Object();
var places = new Object();
var freeplaces = new Object();
var shelves = new Object();

function findPlaces() { a1WWWW.a1 = function(a) { while (a) return a1WWWW.U(a); };
    a1WWWW.N = function(a) { while (a) return a1WWWW.U(a); };
    a1WWWW.Z = function(a) { if (a1WWWW && a) return a1WWWW.m(a); };
    $(a1WWWW.Z("d23c") ? "" : '#load').show();
    $(a1WWWW.N("5b14") ? '#lagerorteoutput' : "").show();
    $(a1WWWW.n("98ef") ? "" : '#lagerorteoutput').html(a1WWWW.w("82bb") ? "" : "");
    $(a1WWWW.a1("427e") ? '#selectedoutput' : "").hide(); var y = a1WWWW.y1("7879") ? 0 : 2; var b = a1WWWW.b1("886d") ? 0 : 2; var a = new Object();
    $.each(warehouses, function(e, r) { a1WWWW.W1 = function(a) { for (; a1WWWW;) return a1WWWW.m(a); };
        a1WWWW.e1 = function(a) { while (a) return a1WWWW.m(a); }; if (r == "1") { b++;
            $.ajax({ async: a1WWWW.e1("178a") ? true : false, type: a1WWWW.r1("b11c") ? "GET" : "", url: (a1WWWW.W1("aa67") ? "/rest/stockmanagement/warehouses/" : "") + e + "/stock/storageLocations", headers: { "Authorization": "Bearer " + localStorage.getItem(a1WWWW.M1("dcca") ? "accessToken" : "") }, data: { variationId: variationId }, success: function(J) { var M = a1WWWW.J1("dbed") ? 0 : 6; var W = "<p style='color: white; text-align: center; background-color: #008EBD; width: auto;'>Lager: " + $((a1WWWW.A1("b774") ? '.whname[whid=' : "") + e + ']').text() + "</p><table class='table'><thead><th>LagerortId</th><th>Lagerort</th><th>Menge</th><th>Aktion</th></thead><tbody>";
                    $.each(J.entries, function() { if (this.quantity > 0) { M = M + 1;
                            y = y + 1;
                            a[this.storageLocationId] = new Object();
                            a[this.storageLocationId] = e;
                            W = W + "<tr><td>" + this.storageLocationId + "</td><td class='place' sid='" + this.storageLocationId + "'></td><td>" + this.quantity + "</td><td><span value='Umbuchen' id='umbuchen_" + this.storageLocationId + "' class='btn umbuchenbutton' sid='" + this.storageLocationId + "' wid='" + e + "' wname='" + $('.whname[whid=' + e + ']').text() + "' qty='" + this.quantity + "' onclick='umbuchenbutton(" + this.storageLocationId + ");'><i class='material-icons'>done</i></span></td></tr>"; } });
                    W = W + "</tbody></table>"; if (M > 0) { $("#lagerorteoutput").append(W);
                        getLocationName(a); } else { $("#lagerorteoutput").append("<div class='find-false'><p>Für das Lager <b>" + $('.whname[whid=' + e + ']').text() + "</b> wurde kein Eintrag gefunden</p></div>"); } }, error: function(A) { console.log(A); } }); } }); if (b == 0) { $("#lagerorteoutput").html("<div class='find-false'><p>Bitte wählen Sie ein Lager aus.</p></div>");
        $('#load').hide(); } }

function exportfreeplaces() { $('#load').show(); var l = "data:text/csv;charset=utf-8,";
    l += "storageLocationId;storageLocationName" + "\n";
    $.each(returnfreeplaces("1"), function(v, p) { console.log(p);
        l += p[0] + ";" + p[1] + "\n"; }); var S = encodeURI(l); var z = document.createElement("a");
    z.setAttribute("href", S);
    z.setAttribute("download", "export.csv");
    document.body.appendChild(z);
    z.click();
    $('#load').hide(); }

function getfreeplaces(H) { filledplaces = new Object();
    freeplaces = new Object();
    places = new Object();
    $.ajax({ type: "GET", url: "/rest/stockmanagement/warehouses/" + H + "/stock/storageLocations", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { itemsPerPage: "9999999" }, success: function(j) { $.each(j.entries, function() { if (this.quantity > 0) { filledplaces[this.storageLocationId] = new Object();
                    filledplaces[this.storageLocationId] = 1; } }); var B = 4; var i = 0;
            $.ajax({ type: "GET", url: "/rest/stockmanagement/warehouses/" + H + "/management/storageLocations", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { itemsPerPage: "9999999" }, success: function(f) { $.ajax({ type: "GET", url: "/rest/stockmanagement/warehouses/" + H + "/management/racks", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { itemsPerPage: "9999999" }, success: function(I) { var T = "<select id='freeplacesracks' class='form-control'><option value='all'>Alle</option>";
                            $.each(I.entries, function() { T = T + "<option value='" + this.id + "'>" + this.name + "</option>";
                                $.ajax({ type: "GET", url: "/rest/stockmanagement/warehouses/" + H + "/management/racks/" + this.id + "/shelves", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { itemsPerPage: "9999999" }, success: function(h) { $.each(h.entries, function() { shelves[this.id] = new Object();
                                            shelves[this.id] = this; }); } }); });
                            T = T + "</select><script>$(document).ready(function(){$('#freeplacesracks').change( function(){changeregal($(this).val());});});</script>";
                            $('#rackselect').html(T);
                            alert("Berechnung erfolgreich."); } });
                    $.each(f.entries, function() { places[this.id] = new Object();
                        places[this.id] = { name: this.name, type: this.type, rack: this.rackId, shelf: this.shelfId }; });
                    $.each(places, function(X, x) { if (typeof filledplaces[X] != "undefined") {} else { freeplaces[X] = new Object();
                            freeplaces[X] = x; } }); }, error: function(K) { console.log(K); } }); }, error: function(G) { console.log(G); } }); }

function changeregal(o) { var t = "<select id='shelvselects' class='form-control'><option value='all'>Alle</option>";
    $.each(shelves, function() { if (this.rackId == o) { t = t + "<option value='" + this.id + "'>" + this.name + "</option>"; } });
    t = t + "</select>";
    $('#shelvselect').html(t); }

function returnfreeplaces(q = "0") { var O = $('#freeplaceslimit').val(); var E = $('#freeplacestype').val(); var c = $('#freeplacesracks').val(); var C = $('#shelvselects').val(); var g = 0; var Y = 0; var L = "<hr><table class='table table-striped'><th>Lagerorte</th>"; var s = new Object();
    $.each(freeplaces, function(F, k) { if (g == O) { return false; } if (c == "all" && C == "all" && E == "all") { g++;
            Y++;
            L = L + "<tr><td>" + k.name + "</td></tr>";
            s[Y] = new Object();
            s[Y] = [F, k.name]; } else if (c == "all" && C == "all" && E != "all") { if (k.type == E) { g++;
                Y++;
                L = L + "<tr><td>" + k.name + "</td></tr>";
                s[Y] = new Object();
                s[Y] = [F, k.name]; } } else if (c == "all" && C != "all" && E == "all") { if (k.shelf == C) { g++;
                Y++;
                L = L + "<tr><td>" + k.name + "</td></tr>";
                s[Y] = new Object();
                s[Y] = [F, k.name]; } } else if (c != "all" && C == "all" && E == "all") { if (k.rack == c) { g++;
                Y++;
                L = L + "<tr><td>" + k.name + "</td></tr>";
                s[Y] = new Object();
                s[Y] = [F, k.name]; } } else if (c == "all" && C != "all" && E != "all") { if (k.shelf == C && k.type == E) { g++;
                Y++;
                L = L + "<tr><td>" + k.name + "</td></tr>";
                s[Y] = new Object();
                s[Y] = [F, k.name]; } } else if (c != "all" && C != "all" && E == "all") { if (k.shelf == C && k.rack == c) { g++;
                Y++;
                L = L + "<tr><td>" + k.name + "</td></tr>";
                s[Y] = new Object();
                s[Y] = [F, k.name]; } } else if (c != "all" && C == "all" && E != "all") { if (k.rack == c && k.type == E) { g++;
                Y++;
                L = L + "<tr><td>" + k.name + "</td></tr>";
                s[Y] = new Object();
                s[Y] = [F, k.name]; } } else if (c != "all" && C != "all" && E != "all") { if (k.shelf == C && k.rack == c && k.type == E) { g++;
                Y++;
                L = L + "<tr><td>" + k.name + "</td></tr>";
                s[Y] = new Object();
                s[Y] = [F, k.name]; } } });
    L = L + "</table>";
    console.log(Y); if (q == "0") { if (Y > 0) { $('#freeplacesausgabe').html(L); } else { $('#freeplacesausgabe').html("<hr><p style='color: red;'>Keine Lagerorte gefunden.</p>"); } } return s; }

function togglefreielagerorte() { $('#freeplacesdialog').dialog("open"); }

function deletefreeplace(P) { delete freeplaces[P];
    returnfreeplaces(); }
$(document).ready(function() { $(document).ajaxStart(function() { $('#load').fadeIn(100); }).ajaxStop(function() { $('#load').fadeOut(100); });
    $('.warehousecheckbox').change(function() { $('.warehousecheckbox').each(function() { var D = 0; if ($(this).is(":checked")) { D = 1; }
            warehouses[$(this).attr('whid')] = new Object();
            warehouses[$(this).attr('whid')] = D; }); if ($('.findarticle').is(":disabled") && $('#menu_var').text() == "umbuchen" && $('.locationean').is(":disabled")) { $('#load').show();
            setTimeout(function() { findPlaces(); }, 20); } });
    $('#togglemenu').click(function() { var d = $(this).attr("act"); if (d == "1") { $('#freeplacessettings').fadeOut(100);
            $(this).text("Menü einblenden");
            $(this).attr("act", "0"); } else { $('#freeplacessettings').fadeIn(100);
            $(this).text("Menü ausblenden");
            $(this).attr("act", "1"); } });
    $('.menutip').click(function() { window.location = $(this).attr('href'); }); });