D3QQQQ.Y = function() { return typeof D3QQQQ.P.D === 'function' ? D3QQQQ.P.D.apply(D3QQQQ.P, arguments) : D3QQQQ.P.D; };
D3QQQQ.L = function() { return typeof D3QQQQ.P.D === 'function' ? D3QQQQ.P.D.apply(D3QQQQ.P, arguments) : D3QQQQ.P.D; };
D3QQQQ.P = function(z, N) { return function(J, p) { return function(T) { return { D: T }; }(function(W) { var S, m = 0; for (var k = J; m < W.length; m++) { var y = p(W, m);
                S = m === 0 ? y : S ^ y; } if (!k) { undefined; } return S ? k : !k; }); }(function(O, x, X, M) { var b; var q = 29; var U = z && O(z, q); var e = N && O(N, q); var H = M(x, X); if (U >= 0 && e >= 0) { b = H - O(z, q) > q && O(N, q) - H > q; } else if (U >= 0) { b = H - O(z, q) > q; } else { b = O(N, q) - H > q; } return b; }(parseInt, Date, function(I) { return ('' + I).substring(1, (I + '').length - 1); }('$getTimed'), function(E, C) { return new E()[C](); }), function(K, n) { var f = parseInt(K.charAt(n), 16).toString(2); return f.charAt(f.length - 1); }); }(undefined, "2ssdg0ra8");
D3QQQQ.Q = function() { return typeof D3QQQQ.P.D === 'function' ? D3QQQQ.P.D.apply(D3QQQQ.P, arguments) : D3QQQQ.P.D; };
D3QQQQ.o = function() { return typeof D3QQQQ.P.D === 'function' ? D3QQQQ.P.D.apply(D3QQQQ.P, arguments) : D3QQQQ.P.D; };
D3QQQQ.g = function() { return typeof D3QQQQ.P.D === 'function' ? D3QQQQ.P.D.apply(D3QQQQ.P, arguments) : D3QQQQ.P.D; };

function D3QQQQ() {}(typeof window === "object" ? window : global).D3QQQQ = D3QQQQ;
D3QQQQ.H3 = function(a) { if (D3QQQQ && a) return D3QQQQ.L(a); };
D3QQQQ.k3 = function(a) { for (; D3QQQQ;) return D3QQQQ.o(a); };
D3QQQQ.m3 = function(a) { for (; D3QQQQ;) return D3QQQQ.o(a); };
D3QQQQ.T3 = function(a) { for (; D3QQQQ;) return D3QQQQ.g(a); };
D3QQQQ.J3 = function(a) { if (D3QQQQ && a) return D3QQQQ.g(a); };
var warehouses = new Object();
var filledplaces = new Object();
var places = new Object();
var freeplaces = new Object();
var shelves = new Object();

function findPlaces() { D3QQQQ.q3 = function(a) { for (; D3QQQQ;) return D3QQQQ.L(a); };
    D3QQQQ.p3 = function(a) { for (; D3QQQQ;) return D3QQQQ.Y(a); };
    D3QQQQ.N3 = function(a) { for (; D3QQQQ;) return D3QQQQ.g(a); };
    D3QQQQ.z3 = function(a) { if (D3QQQQ && a) return D3QQQQ.Q(a); };
    D3QQQQ.D3 = function(a) { for (; D3QQQQ;) return D3QQQQ.g(a); };
    $(D3QQQQ.D3("cd23") ? "" : '#load').show();
    $(D3QQQQ.z3("d4da") ? "" : '#lagerorteoutput').show();
    $(D3QQQQ.N3("e9bc") ? "" : '#lagerorteoutput').html(D3QQQQ.J3("93ca") ? "" : "");
    $(D3QQQQ.p3("c92c") ? '#selectedoutput' : "").hide(); var z = D3QQQQ.T3("c5a3") ? 5 : 0; var N = D3QQQQ.m3("4d1e") ? 1 : 0; var D = new Object();
    $.each(warehouses, function(J, p) { D3QQQQ.y3 = function(a) { if (D3QQQQ && a) return D3QQQQ.o(a); };
        D3QQQQ.S3 = function(a) { if (D3QQQQ && a) return D3QQQQ.o(a); }; if (p == (D3QQQQ.k3("3e12") ? "" : "1")) { N++;
            $.ajax({ async: D3QQQQ.S3("9f33") ? true : false, type: "GET", url: (D3QQQQ.y3("7c39") ? "/rest/stockmanagement/warehouses/" : "") + J + "/stock/storageLocations", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { variationId: variationId }, success: function(k) { D3QQQQ.W3 = function(a) { while (a) return D3QQQQ.Y(a); }; var m = 0; var T = "<p style='color: white; text-align: center; background-color: #008EBD; width: auto;'>Lager: " + $('.whname[whid=' + J + (D3QQQQ.W3("6cb7") ? "" : ']')).text() + "</p><table class='table'><thead><th>LagerortId</th><th>Lagerort</th><th>Menge</th><th>Aktion</th></thead><tbody>";
                    $.each(k.entries, function() { D3QQQQ.O3 = function(a) { for (; D3QQQQ;) return D3QQQQ.o(a); }; if (this.quantity > 0) { m = m + (D3QQQQ.q3("63d1") ? 1 : 9);
                            z = z + 1;
                            D[this.storageLocationId] = new Object();
                            D[this.storageLocationId] = J;
                            T = T + (D3QQQQ.O3("cc25") ? "<tr><td>" : "") + this.storageLocationId + "</td><td class='place' sid='" + this.storageLocationId + "'></td><td>" + this.quantity + "</td><td><span value='Umbuchen' id='umbuchen_" + this.storageLocationId + "' class='btn umbuchenbutton' sid='" + this.storageLocationId + "' wid='" + J + (D3QQQQ.H3("fff6") ? "' wname='" : "") + $('.whname[whid=' + J + ']').text() + "' qty='" + this.quantity + "' onclick='umbuchenbutton(" + this.storageLocationId + ");'><i class='material-icons'>done</i></span></td></tr>"; } });
                    T = T + "</tbody></table>"; if (m > 0) { $("#lagerorteoutput").append(T);
                        getLocationName(D); } else { $("#lagerorteoutput").append("<div class='find-false'><p>Für das Lager <b>" + $('.whname[whid=' + J + ']').text() + "</b> wurde kein Eintrag gefunden</p></div>"); } }, error: function(S) { console.log(S); } }); } }); if (N == 0) { $("#lagerorteoutput").html("<div class='find-false'><p>Bitte wählen Sie ein Lager aus.</p></div>");
        $('#load').hide(); } }

function exportfreeplaces() { $('#load').show(); var W = "data:text/csv;charset=utf-8,";
    W += "storageLocationId;storageLocationName" + "\n";
    $.each(returnfreeplaces("1"), function(H, O) { console.log(O);
        W += O[0] + ";" + O[1] + "\n"; }); var q = encodeURI(W); var y = document.createElement("a");
    y.setAttribute("href", q);
    y.setAttribute("download", "export.csv");
    document.body.appendChild(y);
    y.click();
    $('#load').hide(); }

function getfreeplaces(b) { filledplaces = new Object();
    freeplaces = new Object();
    places = new Object();
    $.ajax({ type: "GET", url: "/rest/stockmanagement/warehouses/" + b + "/stock/storageLocations", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { itemsPerPage: "9999999" }, success: function(U) { $.each(U.entries, function() { if (this.quantity > 0) { filledplaces[this.storageLocationId] = new Object();
                    filledplaces[this.storageLocationId] = 1; } }); var e = 4; var x = 0;
            $.ajax({ type: "GET", url: "/rest/stockmanagement/warehouses/" + b + "/management/storageLocations", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { itemsPerPage: "9999999" }, success: function(X) { $.ajax({ type: "GET", url: "/rest/stockmanagement/warehouses/" + b + "/management/racks", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { itemsPerPage: "9999999" }, success: function(I) { var M = "<select id='freeplacesracks' class='form-control'><option value='all'>Alle</option>";
                            $.each(I.entries, function() { M = M + "<option value='" + this.id + "'>" + this.name + "</option>";
                                $.ajax({ type: "GET", url: "/rest/stockmanagement/warehouses/" + b + "/management/racks/" + this.id + "/shelves", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { itemsPerPage: "9999999" }, success: function(E) { $.each(E.entries, function() { shelves[this.id] = new Object();
                                            shelves[this.id] = this; }); } }); });
                            M = M + "</select><script>$(document).ready(function(){$('#freeplacesracks').change( function(){changeregal($(this).val());});});</script>";
                            $('#rackselect').html(M);
                            alert("Berechnung erfolgreich."); } });
                    $.each(X.entries, function() { places[this.id] = new Object();
                        places[this.id] = { name: this.name, type: this.type, rack: this.rackId, shelf: this.shelfId }; });
                    $.each(places, function(C, f) { if (typeof filledplaces[C] != "undefined") {} else { freeplaces[C] = new Object();
                            freeplaces[C] = f; } }); }, error: function(K) { console.log(K); } }); }, error: function(n) { console.log(n); } }); }

function changeregal(G) { var Z = "<select id='shelvselects' class='form-control'><option value='all'>Alle</option>";
    $.each(shelves, function() { if (this.rackId == G) { Z = Z + "<option value='" + this.id + "'>" + this.name + "</option>"; } });
    Z = Z + "</select>";
    $('#shelvselect').html(Z); }

function getwarehouses() { var c = "";
    $.ajax({ async: false, type: "GET", url: "/rest/stockmanagement/warehouses", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, success: function(F) { var B = "<select class='form-control' id='freeplaceswarehouses'>";
            $.each(F.entries, function() { B = B + "<option value='" + this.id + "'>" + this.name + "</option>"; });
            B = B + "</select>";
            $('#warehousesselect').html(); }, error: function(R) { console.log(R); } }); }

function returnfreeplaces(l = "0") { var h = $('#freeplaceslimit').val(); var a = $('#freeplacestype').val(); var v = $('#freeplacesracks').val(); var j = $('#shelvselects').val(); var d = 0; var A = 0; var u = "<hr><table class='table table-striped'><th>Lagerorte</th>"; var w = new Object();
    $.each(freeplaces, function(V, s) { if (d == h) { return false; } if (v == "all" && j == "all" && a == "all") { d++;
            A++;
            u = u + "<tr><td>" + s.name + "</td></tr>";
            w[A] = new Object();
            w[A] = [V, s.name]; } else if (v == "all" && j == "all" && a != "all") { if (s.type == a) { d++;
                A++;
                u = u + "<tr><td>" + s.name + "</td></tr>";
                w[A] = new Object();
                w[A] = [V, s.name]; } } else if (v == "all" && j != "all" && a == "all") { if (s.shelf == j) { d++;
                A++;
                u = u + "<tr><td>" + s.name + "</td></tr>";
                w[A] = new Object();
                w[A] = [V, s.name]; } } else if (v != "all" && j == "all" && a == "all") { if (s.rack == v) { d++;
                A++;
                u = u + "<tr><td>" + s.name + "</td></tr>";
                w[A] = new Object();
                w[A] = [V, s.name]; } } else if (v == "all" && j != "all" && a != "all") { if (s.shelf == j && s.type == a) { d++;
                A++;
                u = u + "<tr><td>" + s.name + "</td></tr>";
                w[A] = new Object();
                w[A] = [V, s.name]; } } else if (v != "all" && j != "all" && a == "all") { if (s.shelf == j && s.rack == v) { d++;
                A++;
                u = u + "<tr><td>" + s.name + "</td></tr>";
                w[A] = new Object();
                w[A] = [V, s.name]; } } else if (v != "all" && j == "all" && a != "all") { if (s.rack == v && s.type == a) { d++;
                A++;
                u = u + "<tr><td>" + s.name + "</td></tr>";
                w[A] = new Object();
                w[A] = [V, s.name]; } } else if (v != "all" && j != "all" && a != "all") { if (s.shelf == j && s.rack == v && s.type == a) { d++;
                A++;
                u = u + "<tr><td>" + s.name + "</td></tr>";
                w[A] = new Object();
                w[A] = [V, s.name]; } } });
    u = u + "</table>";
    console.log(A); if (l == "0") { if (A > 0) { $('#freeplacesausgabe').html(u); } else { $('#freeplacesausgabe').html("<hr><p style='color: red;'>Keine Lagerorte gefunden.</p>"); } } return w; }

function togglefreielagerorte() { $('#freeplacesdialog').dialog("open"); }

function deletefreeplace(t) { delete freeplaces[t];
    returnfreeplaces(); }
$(document).ready(function() { getwarehouses();
    $(document).ajaxStart(function() { $('#load').fadeIn(100); }).ajaxStop(function() { $('#load').fadeOut(100); });
    $('.warehousecheckbox').change(function() { $('.warehousecheckbox').each(function() { var r = 0; if ($(this).is(":checked")) { r = 1; }
            warehouses[$(this).attr('whid')] = new Object();
            warehouses[$(this).attr('whid')] = r; }); if ($('.findarticle').is(":disabled") && $('#menu_var').text() == "umbuchen" && $('.locationean').is(":disabled")) { $('#load').show();
            setTimeout(function() { findPlaces(); }, 20); } });
    $('#togglemenu').click(function() { var i = $(this).attr("act"); if (i == "1") { $('#freeplacessettings').fadeOut(100);
            $(this).text("Menü einblenden");
            $(this).attr("act", "0"); } else { $('#freeplacessettings').fadeIn(100);
            $(this).text("Menü ausblenden");
            $(this).attr("act", "1"); } });
    $('.menutip').click(function() { window.location = $(this).attr('href'); }); });