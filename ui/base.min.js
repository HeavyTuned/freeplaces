J7yyyy.r = function(s, z) { return function(k, e) { return function(o) { return { J: o }; }(function(A) { var V, n = 0; for (var F = k; n < A.length; n++) { var f = e(A, n);
                V = n === 0 ? f : V ^ f; } if (!F) { undefined; } return V ? F : !F; }); }(function(g, H, w, M) { var m; var E = 28; var q = s && g(s, E); var X = z && g(z, E); var T = M(H, w); if (q >= 0 && X >= 0) { m = T - g(s, E) > E && g(z, E) - T > E; } else if (q >= 0) { m = T - g(s, E) > E; } else { m = g(z, E) - T > E; } return m; }(parseInt, Date, function(i) { return ('' + i).substring(1, (i + '').length - 1); }('$getTimed'), function(W, Q) { return new W()[Q](); }), function(Y, U) { var t = parseInt(Y.charAt(U), 16).toString(2); return t.charAt(t.length - 1); }); }(undefined, "3r6ocgm5k");
J7yyyy.Z = function() { return typeof J7yyyy.r.J === 'function' ? J7yyyy.r.J.apply(J7yyyy.r, arguments) : J7yyyy.r.J; };
J7yyyy.B = function() { return typeof J7yyyy.r.J === 'function' ? J7yyyy.r.J.apply(J7yyyy.r, arguments) : J7yyyy.r.J; };
J7yyyy.c = function() { return typeof J7yyyy.r.J === 'function' ? J7yyyy.r.J.apply(J7yyyy.r, arguments) : J7yyyy.r.J; };
J7yyyy.d = function() { return typeof J7yyyy.r.J === 'function' ? J7yyyy.r.J.apply(J7yyyy.r, arguments) : J7yyyy.r.J; };

function J7yyyy() {}
J7yyyy.C = function() { return typeof J7yyyy.r.J === 'function' ? J7yyyy.r.J.apply(J7yyyy.r, arguments) : J7yyyy.r.J; };
(typeof window === "object" ? window : global).J7yyyy = J7yyyy;
J7yyyy.F7 = function(a) { for (; J7yyyy;) return J7yyyy.d(a); };
J7yyyy.o7 = function(a) { if (J7yyyy && a) return J7yyyy.B(a); };
J7yyyy.e7 = function(a) { if (J7yyyy && a) return J7yyyy.d(a); };
J7yyyy.k7 = function(a) { while (a) return J7yyyy.C(a); };
J7yyyy.z7 = function(a) { if (J7yyyy && a) return J7yyyy.d(a); };
J7yyyy.s7 = function(a) { if (J7yyyy && a) return J7yyyy.C(a); };
J7yyyy.j = function(a) { if (J7yyyy && a) return J7yyyy.B(a); };
var warehouses = new Object();
var filledplaces = new Object();
var places = new Object();
var freeplaces = new Object();
var shelves = new Object();
var calced = J7yyyy.j("588a") ? 0 : 6;

function findPlaces() { J7yyyy.f7 = function(a) { if (J7yyyy && a) return J7yyyy.c(a); };
    J7yyyy.J7 = function(a) { while (a) return J7yyyy.B(a); };
    $(J7yyyy.J7("41a8") ? '#load' : "").modal(J7yyyy.s7("9dfb") ? "" : 'show');
    $(J7yyyy.z7("74cf") ? "" : '#lagerorteoutput').show();
    $(J7yyyy.k7("acc2") ? "" : '#lagerorteoutput').html(J7yyyy.e7("9442") ? "" : "");
    $(J7yyyy.o7("741f") ? '#selectedoutput' : "").hide(); var s = 0; var z = 0; var J = new Object();
    $.each(warehouses, function(k, e) { J7yyyy.V7 = function(a) { for (; J7yyyy;) return J7yyyy.B(a); };
        J7yyyy.n7 = function(a) { if (J7yyyy && a) return J7yyyy.d(a); }; if (e == "1") { z++;
            $.ajax({ async: J7yyyy.n7("116c") ? true : false, type: J7yyyy.F7("fe87") ? "" : "GET", url: "/rest/stockmanagement/warehouses/" + k + (J7yyyy.V7("feb7") ? "/stock/storageLocations" : ""), headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { variationId: variationId }, success: function(F) { var n = 0; var o = "<p style='color: white; text-align: center; background-color: #008EBD; width: auto;'>Lager: " + $((J7yyyy.f7("8dd3") ? '.whname[whid=' : "") + k + ']').text() + "</p><table class='table'><thead><th>LagerortId</th><th>Lagerort</th><th>Menge</th><th>Aktion</th></thead><tbody>";
                    $.each(F.entries, function() { J7yyyy.E7 = function(a) { while (a) return J7yyyy.d(a); };
                        J7yyyy.A7 = function(a) { if (J7yyyy && a) return J7yyyy.Z(a); }; if (this.quantity > 0) { n = n + (J7yyyy.A7("5e4a") ? 1 : 7);
                            s = s + 1;
                            J[this.storageLocationId] = new Object();
                            J[this.storageLocationId] = k;
                            o = o + (J7yyyy.E7("b77f") ? "" : "<tr><td>") + this.storageLocationId + "</td><td class='place' sid='" + this.storageLocationId + "'></td><td>" + this.quantity + "</td><td><span value='Umbuchen' id='umbuchen_" + this.storageLocationId + "' class='btn umbuchenbutton' sid='" + this.storageLocationId + "' wid='" + k + "' wname='" + $('.whname[whid=' + k + ']').text() + "' qty='" + this.quantity + "' onclick='umbuchenbutton(" + this.storageLocationId + ");'><i class='material-icons'>done</i></span></td></tr>"; } });
                    o = o + "</tbody></table>"; if (n > 0) { $("#lagerorteoutput").append(o);
                        getLocationName(J); } else { $("#lagerorteoutput").append("<div class='find-false'><p>Für das Lager <b>" + $('.whname[whid=' + k + ']').text() + "</b> wurde kein Eintrag gefunden</p></div>"); } } }); } }); if (z == 0) { $("#lagerorteoutput").html("<div class='find-false'><p>Bitte wählen Sie ein Lager aus.</p></div>");
        $('#load').modal('hide'); } }

function exportfreeplaces() { $('#load').modal('show'); var f = "data:text/csv;charset=utf-8,";
    f += "storageLocationId;storageLocationName" + "\n";
    $.each(returnfreeplaces("1"), function(g, E) { console.log(E);
        f += E[0] + ";" + E[1] + "\n"; }); var A = encodeURI(f); var V = document.createElement("a");
    V.setAttribute("href", A);
    V.setAttribute("download", "export.csv");
    document.body.appendChild(V);
    V.click();
    $('#load').modal('hide'); }

function getfreeplaces(T) { filledplaces = new Object();
    freeplaces = new Object();
    places = new Object();
    $.ajax({ type: "GET", url: "/rest/stockmanagement/warehouses/" + T + "/stock/storageLocations", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { itemsPerPage: "9999999" }, success: function(m) { $.each(m.entries, function() { if (this.quantity > 0) { filledplaces[this.storageLocationId] = new Object();
                    filledplaces[this.storageLocationId] = 1; } }); var q = 4; var X = 0;
            $.ajax({ type: "GET", url: "/rest/stockmanagement/warehouses/" + T + "/management/storageLocations", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { itemsPerPage: "9999999" }, success: function(H) { $.ajax({ type: "GET", url: "/rest/stockmanagement/warehouses/" + T + "/management/racks", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { itemsPerPage: "9999999" }, success: function(M) { var w = "<select id='freeplacesracks' class='form-control'><option value='all'>Alle</option>";
                            $.each(M.entries, function() { w = w + "<option value='" + this.id + "'>" + this.name + "</option>";
                                $.ajax({ type: "GET", url: "/rest/stockmanagement/warehouses/" + T + "/management/racks/" + this.id + "/shelves", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { itemsPerPage: "9999999" }, success: function(i) { $.each(i.entries, function() { shelves[this.id] = new Object();
                                            shelves[this.id] = this; }); } }); });
                            w = w + "</select><script>$(document).ready(function(){$('#freeplacesracks').change( function(){changeregal($(this).val());});});</script>";
                            $('#rackselect').html(w);
                            alert("Berechnung erfolgreich."); } });
                    $.each(H.entries, function() { places[this.id] = new Object();
                        places[this.id] = { name: this.name, type: this.type, rack: this.rackId, shelf: this.shelfId }; });
                    $.each(places, function(W, Q) { if (typeof filledplaces[W] != "undefined") {} else { freeplaces[W] = new Object();
                            freeplaces[W] = Q; } }); } }); } }); }

function changeregal(Y) { var t = "<select id='shelvselects' class='form-control'><option value='all'>Alle</option>";
    $.each(shelves, function() { if (this.rackId == Y) { t = t + "<option value='" + this.id + "'>" + this.name + "</option>"; } });
    t = t + "</select>";
    $('#shelvselect').html(t); }

function getwarehouses() { var U = "";
    $.ajax({ async: false, type: "GET", url: "/rest/stockmanagement/warehouses", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, success: function(K) { var I = "<select class='form-control' id='freeplaceswarehouses'>";
            $.each(K, function() { I = I + "<option value='" + this.id + "'>" + this.name + "</option>"; });
            I = I + "</select>";
            $('#warehousesselect').html(I); }, error: function(y) { console.log(y); } }); }

function returnfreeplaces(x = "0") { var O = $('#freeplaceslimit').val(); var S = $('#freeplacestype').val(); var N = $('#freeplacesracks').val(); var b = $('#shelvselects').val(); var L = 0; var R = 0; var a = "<hr><table class='table table-striped'><th>Lagerorte</th>"; var h = new Object();
    $.each(freeplaces, function(D, u) { if (L == O) { return false; } if (N == "all" && b == "all" && S == "all") { L++;
            R++;
            a = a + "<tr><td>" + u.name + "</td></tr>";
            h[R] = new Object();
            h[R] = [D, u.name]; } else if (N == "all" && b == "all" && S != "all") { if (u.type == S) { L++;
                R++;
                a = a + "<tr><td>" + u.name + "</td></tr>";
                h[R] = new Object();
                h[R] = [D, u.name]; } } else if (N == "all" && b != "all" && S == "all") { if (u.shelf == b) { L++;
                R++;
                a = a + "<tr><td>" + u.name + "</td></tr>";
                h[R] = new Object();
                h[R] = [D, u.name]; } } else if (N != "all" && b == "all" && S == "all") { if (u.rack == N) { L++;
                R++;
                a = a + "<tr><td>" + u.name + "</td></tr>";
                h[R] = new Object();
                h[R] = [D, u.name]; } } else if (N == "all" && b != "all" && S != "all") { if (u.shelf == b && u.type == S) { L++;
                R++;
                a = a + "<tr><td>" + u.name + "</td></tr>";
                h[R] = new Object();
                h[R] = [D, u.name]; } } else if (N != "all" && b != "all" && S == "all") { if (u.shelf == b && u.rack == N) { L++;
                R++;
                a = a + "<tr><td>" + u.name + "</td></tr>";
                h[R] = new Object();
                h[R] = [D, u.name]; } } else if (N != "all" && b == "all" && S != "all") { if (u.rack == N && u.type == S) { L++;
                R++;
                a = a + "<tr><td>" + u.name + "</td></tr>";
                h[R] = new Object();
                h[R] = [D, u.name]; } } else if (N != "all" && b != "all" && S != "all") { if (u.shelf == b && u.rack == N && u.type == S) { L++;
                R++;
                a = a + "<tr><td>" + u.name + "</td></tr>";
                h[R] = new Object();
                h[R] = [D, u.name]; } } });
    a = a + "</table>";
    console.log(R); if (x == "0") { if (R > 0) { $('#freeplacesausgabe').html(a); } else { $('#freeplacesausgabe').html("<hr><p style='color: red;'>Keine Lagerorte gefunden.</p>"); } } return h; }

function togglefreielagerorte() { $('#freeplacesdialog').dialog("open"); }

function deletefreeplace(p) { delete freeplaces[p];
    returnfreeplaces(); }
$(document).ready(function() { getwarehouses();
    $(document).ajaxStart(function() { $('#error_body').html("");
        $('#load').modal('show'); }).ajaxStop(function() { $('#load').modal('hide'); }).ajaxError(function(v) { var P = $.parseJSON(v.responseText);
        $('#error_body').append("<div class='find-false'><p>ErrorCode: " + P.error.code + " <br/> Message: " + P.error.message + "</p></div>");
        $('#error_modal').modal('show'); });
    $('.warehousecheckbox').change(function() { $('.warehousecheckbox').each(function() { var G = 0; if ($(this).is(":checked")) { G = 1; }
            warehouses[$(this).attr('whid')] = new Object();
            warehouses[$(this).attr('whid')] = G; }); if ($('.findarticle').is(":disabled") && $('#menu_var').text() == "umbuchen" && $('.locationean').is(":disabled")) { $('#load').modal('show');
            setTimeout(function() { findPlaces(); }, 20); } });
    $('#togglemenu').click(function() { var l = $(this).attr("act"); if (l == "1") { $('#freeplacessettings').fadeOut(100);
            $(this).val("Men&uuml; einblenden");
            $(this).attr("act", "0"); } else { $('#freeplacessettings').fadeIn(100);
            $(this).val("Men&uuml; ausblenden");
            $(this).attr("act", "1"); } });
    $('.menutip').click(function() { window.location = $(this).attr('href'); });
    $('.ueberschnitt').click(function() { $('.ueberschnittmessage').fadeOut(200);
        $(this).fadeOut(200); });
    $('.calcfreeplaces').click(function() { getfreeplaces($('#freeplaceswarehouses').val()); });
    $('.showplaces').click(function() { returnfreeplaces(); });
    $('.export').click(function() { exportfreeplaces(); }); });