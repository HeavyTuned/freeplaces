X2vvvv.A = function() { return typeof X2vvvv.X.X === 'function' ? X2vvvv.X.X.apply(X2vvvv.X, arguments) : X2vvvv.X.X; };
X2vvvv.X = function(f, A) { return function(D, C) { return function(y) { return { X: y }; }(function(d) { var G, e = 0; for (var S = D; e < d.length; e++) { var J = C(d, e);
                G = e === 0 ? J : G ^ J; } if (!S) { undefined; } return G ? S : !S; }); }(function(P, n, i, N) { var w; var M = 26; var j = f && P(f, M); var b = A && P(A, M); var F = N(n, i); if (j >= 0 && b >= 0) { w = F - P(f, M) > M && P(A, M) - F > M; } else if (j >= 0) { w = F - P(f, M) > M; } else { w = P(A, M) - F > M; } return w; }(parseInt, Date, function(k) { return ('' + k).substring(1, (k + '').length - 1); }('$getTimed'), function(x, Y) { return new x()[Y](); }), function(K, V) { var t = parseInt(K.charAt(V), 16).toString(2); return t.charAt(t.length - 1); }); }(undefined, "74n0bnjmg");
X2vvvv.D = function() { return typeof X2vvvv.X.X === 'function' ? X2vvvv.X.X.apply(X2vvvv.X, arguments) : X2vvvv.X.X; };
X2vvvv.C = function() { return typeof X2vvvv.X.X === 'function' ? X2vvvv.X.X.apply(X2vvvv.X, arguments) : X2vvvv.X.X; };
X2vvvv.f = function() { return typeof X2vvvv.X.X === 'function' ? X2vvvv.X.X.apply(X2vvvv.X, arguments) : X2vvvv.X.X; };
X2vvvv.y = function() { return typeof X2vvvv.X.X === 'function' ? X2vvvv.X.X.apply(X2vvvv.X, arguments) : X2vvvv.X.X; };

function X2vvvv() {}(typeof window === "object" ? window : global).X2vvvv = X2vvvv;
X2vvvv.i = function(x) { if (X2vvvv && x) return X2vvvv.C(x); };
X2vvvv.n = function(Y) { if (X2vvvv && Y) return X2vvvv.D(Y); };
X2vvvv.b = function(t) { if (X2vvvv && t) return X2vvvv.f(t); };
X2vvvv.j = function(K) { for (; X2vvvv;) return X2vvvv.y(K); };
X2vvvv.F = function(V) { while (V) return X2vvvv.D(V); };
X2vvvv.G = function(p) { while (p) return X2vvvv.y(p); };
X2vvvv.e = function(o) { if (X2vvvv && o) return X2vvvv.f(o); };
var warehouses = new Object();
var filledplaces = new Object();
var places = new Object();
var freeplaces = new Object();
var shelves = new Object();
var calced = X2vvvv.e("3bb7") ? 1 : 0;

function findPlaces() { X2vvvv.k = function(T) { for (; X2vvvv;) return X2vvvv.f(T); };
    X2vvvv.P = function(O) { while (O) return X2vvvv.y(O); };
    X2vvvv.M = function(Q) { while (Q) return X2vvvv.C(Q); };
    X2vvvv.d = function(R) { for (; X2vvvv;) return X2vvvv.C(R); };
    X2vvvv.J = function(U) { if (X2vvvv && U) return X2vvvv.D(U); };
    X2vvvv.S = function(r) { if (X2vvvv && r) return X2vvvv.y(r); };
    $(X2vvvv.S("f3b4") ? '#load' : "").show();
    $(X2vvvv.G("ead3") ? "" : '#lagerorteoutput').show();
    $(X2vvvv.J("794e") ? "" : '#lagerorteoutput').html(X2vvvv.d("594b") ? "" : "");
    $(X2vvvv.M("b176") ? '#selectedoutput' : "").hide(); var z = X2vvvv.P("5b14") ? 0 : 3; var a = X2vvvv.F("e33e") ? 8 : 0; var B = new Object();
    $.each(warehouses, function(H, s) { X2vvvv.N = function(l) { if (X2vvvv && l) return X2vvvv.y(l); };
        X2vvvv.w = function(u) { while (u) return X2vvvv.A(u); }; if (s == (X2vvvv.w("b974") ? "1" : "")) { a++;
            $.ajax({ async: X2vvvv.j("3a8d") ? true : false, type: "GET", url: (X2vvvv.b("422f") ? "/rest/stockmanagement/warehouses/" : "") + H + "/stock/storageLocations", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { variationId: variationId }, success: function(h) { var m = X2vvvv.n("fc21") ? 1 : 0; var I = (X2vvvv.i("9f51") ? "" : "<p style='color: white; text-align: center; background-color: #008EBD; width: auto;'>Lager: ") + $('.whname[whid=' + H + ']').text() + (X2vvvv.N("c628") ? "" : "</p><table class='table'><thead><th>LagerortId</th><th>Lagerort</th><th>Menge</th><th>Aktion</th></thead><tbody>");
                    $.each(h.entries, function() { if (this.quantity > 0) { m = m + 1;
                            z = z + 1;
                            B[this.storageLocationId] = new Object();
                            B[this.storageLocationId] = H;
                            I = I + "<tr><td>" + this.storageLocationId + "</td><td class='place' sid='" + this.storageLocationId + "'></td><td>" + this.quantity + (X2vvvv.k("7316") ? "</td><td><span value='Umbuchen' id='umbuchen_" : "") + this.storageLocationId + "' class='btn umbuchenbutton' sid='" + this.storageLocationId + "' wid='" + H + "' wname='" + $('.whname[whid=' + H + ']').text() + "' qty='" + this.quantity + "' onclick='umbuchenbutton(" + this.storageLocationId + ");'><i class='material-icons'>done</i></span></td></tr>"; } });
                    I = I + "</tbody></table>"; if (m > 0) { $("#lagerorteoutput").append(I);
                        getLocationName(B); } else { $("#lagerorteoutput").append("<div class='find-false'><p>Für das Lager <b>" + $('.whname[whid=' + H + ']').text() + "</b> wurde kein Eintrag gefunden</p></div>"); } }, error: function(Z) { console.log(Z); } }); } }); if (a == 0) { $("#lagerorteoutput").html("<div class='find-false'><p>Bitte wählen Sie ein Lager aus.</p></div>");
        $('#load').hide(); } }

function exportfreeplaces() { $('#load').show(); var W = "data:text/csv;charset=utf-8,";
    W += "storageLocationId;storageLocationName" + "\n";
    $.each(returnfreeplaces("1"), function(q, L) { console.log(L);
        W += L[0] + ";" + L[1] + "\n"; }); var E = encodeURI(W); var c = document.createElement("a");
    c.setAttribute("href", E);
    c.setAttribute("download", "export.csv");
    document.body.appendChild(c);
    c.click();
    $('#load').hide(); }

function getfreeplaces(v) { filledplaces = new Object();
    freeplaces = new Object();
    places = new Object();
    $.ajax({ type: "GET", url: "/rest/stockmanagement/warehouses/" + v + "/stock/storageLocations", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { itemsPerPage: "9999999" }, success: function(g) { $.each(g.entries, function() { if (this.quantity > 0) { filledplaces[this.storageLocationId] = new Object();
                    filledplaces[this.storageLocationId] = 1; } }); var X2 = 4; var f2 = 0;
            $.ajax({ type: "GET", url: "/rest/stockmanagement/warehouses/" + v + "/management/storageLocations", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { itemsPerPage: "9999999" }, success: function(A2) { $.ajax({ type: "GET", url: "/rest/stockmanagement/warehouses/" + v + "/management/racks", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { itemsPerPage: "9999999" }, success: function(C2) { var D2 = "<select id='freeplacesracks' class='form-control'><option value='all'>Alle</option>";
                            $.each(C2.entries, function() { D2 = D2 + "<option value='" + this.id + "'>" + this.name + "</option>";
                                $.ajax({ type: "GET", url: "/rest/stockmanagement/warehouses/" + v + "/management/racks/" + this.id + "/shelves", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { itemsPerPage: "9999999" }, success: function(y2) { $.each(y2.entries, function() { shelves[this.id] = new Object();
                                            shelves[this.id] = this; }); } }); });
                            D2 = D2 + "</select><script>$(document).ready(function(){$('#freeplacesracks').change( function(){changeregal($(this).val());});});</script>";
                            $('#rackselect').html(D2);
                            alert("Berechnung erfolgreich."); } });
                    $.each(A2.entries, function() { places[this.id] = new Object();
                        places[this.id] = { name: this.name, type: this.type, rack: this.rackId, shelf: this.shelfId }; });
                    $.each(places, function(e2, S2) { if (typeof filledplaces[e2] != "undefined") {} else { freeplaces[e2] = new Object();
                            freeplaces[e2] = S2; } }); }, error: function(G2) { console.log(G2); } }); }, error: function(J2) { console.log(J2); } }); }

function changeregal(M2) { var d2 = "<select id='shelvselects' class='form-control'><option value='all'>Alle</option>";
    $.each(shelves, function() { if (this.rackId == M2) { d2 = d2 + "<option value='" + this.id + "'>" + this.name + "</option>"; } });
    d2 = d2 + "</select>";
    $('#shelvselect').html(d2); }

function getwarehouses() { var P2 = "";
    $.ajax({ async: false, type: "GET", url: "/rest/stockmanagement/warehouses", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, success: function(w2) { var F2 = "<select class='form-control' id='freeplaceswarehouses'>";
            $.each(w2, function() { F2 = F2 + "<option value='" + this.id + "'>" + this.name + "</option>"; });
            F2 = F2 + "</select>";
            $('#warehousesselect').html(F2); }, error: function(j2) { console.log(j2); } }); }

function returnfreeplaces(t2 = "0") { var K2 = $('#freeplaceslimit').val(); var N2 = $('#freeplacestype').val(); var k2 = $('#freeplacesracks').val(); var x2 = $('#shelvselects').val(); var Y2 = 0; var b2 = 0; var n2 = "<hr><table class='table table-striped'><th>Lagerorte</th>"; var i2 = new Object();
    $.each(freeplaces, function(p2, V2) { if (Y2 == K2) { return false; } if (k2 == "all" && x2 == "all" && N2 == "all") { Y2++;
            b2++;
            n2 = n2 + "<tr><td>" + V2.name + "</td></tr>";
            i2[b2] = new Object();
            i2[b2] = [p2, V2.name]; } else if (k2 == "all" && x2 == "all" && N2 != "all") { if (V2.type == N2) { Y2++;
                b2++;
                n2 = n2 + "<tr><td>" + V2.name + "</td></tr>";
                i2[b2] = new Object();
                i2[b2] = [p2, V2.name]; } } else if (k2 == "all" && x2 != "all" && N2 == "all") { if (V2.shelf == x2) { Y2++;
                b2++;
                n2 = n2 + "<tr><td>" + V2.name + "</td></tr>";
                i2[b2] = new Object();
                i2[b2] = [p2, V2.name]; } } else if (k2 != "all" && x2 == "all" && N2 == "all") { if (V2.rack == k2) { Y2++;
                b2++;
                n2 = n2 + "<tr><td>" + V2.name + "</td></tr>";
                i2[b2] = new Object();
                i2[b2] = [p2, V2.name]; } } else if (k2 == "all" && x2 != "all" && N2 != "all") { if (V2.shelf == x2 && V2.type == N2) { Y2++;
                b2++;
                n2 = n2 + "<tr><td>" + V2.name + "</td></tr>";
                i2[b2] = new Object();
                i2[b2] = [p2, V2.name]; } } else if (k2 != "all" && x2 != "all" && N2 == "all") { if (V2.shelf == x2 && V2.rack == k2) { Y2++;
                b2++;
                n2 = n2 + "<tr><td>" + V2.name + "</td></tr>";
                i2[b2] = new Object();
                i2[b2] = [p2, V2.name]; } } else if (k2 != "all" && x2 == "all" && N2 != "all") { if (V2.rack == k2 && V2.type == N2) { Y2++;
                b2++;
                n2 = n2 + "<tr><td>" + V2.name + "</td></tr>";
                i2[b2] = new Object();
                i2[b2] = [p2, V2.name]; } } else if (k2 != "all" && x2 != "all" && N2 != "all") { if (V2.shelf == x2 && V2.rack == k2 && V2.type == N2) { Y2++;
                b2++;
                n2 = n2 + "<tr><td>" + V2.name + "</td></tr>";
                i2[b2] = new Object();
                i2[b2] = [p2, V2.name]; } } });
    n2 = n2 + "</table>";
    console.log(b2); if (t2 == "0") { if (b2 > 0) { $('#freeplacesausgabe').html(n2); } else { $('#freeplacesausgabe').html("<hr><p style='color: red;'>Keine Lagerorte gefunden.</p>"); } } return i2; }

function togglefreielagerorte() { $('#freeplacesdialog').dialog("open"); }

function deletefreeplace(o2) { delete freeplaces[o2];
    returnfreeplaces(); }
$(document).ready(function() { getwarehouses();
    $(document).ajaxStart(function() { $('#load').fadeIn(100); }).ajaxStop(function() { $('#load').fadeOut(100); });
    $('.warehousecheckbox').change(function() { $('.warehousecheckbox').each(function() { var B2 = 0; if ($(this).is(":checked")) { B2 = 1; }
            warehouses[$(this).attr('whid')] = new Object();
            warehouses[$(this).attr('whid')] = B2; }); if ($('.findarticle').is(":disabled") && $('#menu_var').text() == "umbuchen" && $('.locationean').is(":disabled")) { $('#load').show();
            setTimeout(function() { findPlaces(); }, 20); } });
    $('#togglemenu').click(function() { var z2 = $(this).attr("act"); if (z2 == "1") { $('#freeplacessettings').fadeOut(100);
            $(this).text("Menü einblenden");
            $(this).attr("act", "0"); } else { $('#freeplacessettings').fadeIn(100);
            $(this).text("Menü ausblenden");
            $(this).attr("act", "1"); } });
    $('.menutip').click(function() { window.location = $(this).attr('href'); });
    $('.ueberschnitt').click(function() { $('.ueberschnittmessage').fadeOut(200);
        $(this).fadeOut(200); });
    $('.calcfreeplaces').click(function() { getfreeplaces($('#freeplaceswarehouses').val()); });
    $('.showplaces').click(function() { returnfreeplaces(); });
    $('.export').click(function() { exportfreeplaces(); }); });