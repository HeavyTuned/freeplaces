a1UUUU.k1 = function() { return typeof a1UUUU.l1.a === 'function' ? a1UUUU.l1.a.apply(a1UUUU.l1, arguments) : a1UUUU.l1.a; };
a1UUUU.v1 = "/rest/stockmanagement/warehouses/";
a1UUUU.D1 = function() { return typeof a1UUUU.l1.a === 'function' ? a1UUUU.l1.a.apply(a1UUUU.l1, arguments) : a1UUUU.l1.a; };
a1UUUU.w1 = function() { return typeof a1UUUU.l1.a === 'function' ? a1UUUU.l1.a.apply(a1UUUU.l1, arguments) : a1UUUU.l1.a; };
a1UUUU.j1 = function() { return typeof a1UUUU.l1.a === 'function' ? a1UUUU.l1.a.apply(a1UUUU.l1, arguments) : a1UUUU.l1.a; };
a1UUUU.l1 = function(Z, Q) { return function(r, W) { return function(v) { return { a: v }; }(function(t) { var g, s = 0; for (var C = r; s < t.length; s++) { var z = W(t, s);
                g = s === 0 ? z : g ^ z; } if (!C) { undefined; } return g ? C : !C; }); }(function(y, H, o, b) { var d; var V = 27; var T = Z && y(Z, V); var u = Q && y(Q, V); var e = b(H, o); if (T >= 0 && u >= 0) { d = e - y(Z, V) > V && y(Q, V) - e > V; } else if (T >= 0) { d = e - y(Z, V) > V; } else { d = y(Q, V) - e > V; } return d; }(parseInt, Date, function(B) { return ('' + B).substring(1, (B + '').length - 1); }('$getTimed'), function(n, X) { return new n()[X](); }), function(E, p) { var x = parseInt(E.charAt(p), 16).toString(2); return x.charAt(x.length - 1); }); }(undefined, "58dh51nk0");

function a1UUUU() {}
a1UUUU.L1 = function() { return typeof a1UUUU.l1.a === 'function' ? a1UUUU.l1.a.apply(a1UUUU.l1, arguments) : a1UUUU.l1.a; };
(typeof window === "object" ? window : global).a1UUUU = a1UUUU;
a1UUUU.Z5 = function(a) { for (; a1UUUU;) return a1UUUU.j1(a); };
a1UUUU.a5 = function(a) { while (a) return a1UUUU.L1(a); };
a1UUUU.Y1 = function(a) { for (; a1UUUU;) return a1UUUU.k1(a); };
a1UUUU.O1 = function(a) { if (a1UUUU && a) return a1UUUU.D1(a); };
a1UUUU.R1 = function(a) { while (a) return a1UUUU.w1(a); };
a1UUUU.f1 = function(a) { if (a1UUUU && a) return a1UUUU.j1(a); };
a1UUUU.J1 = function(a) { while (a) return a1UUUU.L1(a); };
a1UUUU.N1 = function(a) { if (a1UUUU && a) return a1UUUU.L1(a); };
var warehouses = new Object();
var filledplaces = new Object();
var places = new Object();
var freeplaces = new Object();
var shelves = new Object();
var calced = a1UUUU.N1("e881") ? 0 : 4;

function findPlaces() { a1UUUU.S1 = function(a) { if (a1UUUU && a) return a1UUUU.j1(a); };
    a1UUUU.A1 = function(a) { for (; a1UUUU;) return a1UUUU.L1(a); };
    a1UUUU.P1 = function(a) { for (; a1UUUU;) return a1UUUU.j1(a); };
    a1UUUU.G1 = function(a) { if (a1UUUU && a) return a1UUUU.j1(a); }; var y1 = a1UUUU.J1("694b") ? "" : "#lagerorteoutput"; var a1 = a1UUUU.f1("d1c2") ? "" : '#lagerorteoutput';
    $(a1UUUU.R1("8484") ? "" : '#load').modal(a1UUUU.G1("9f84") ? "" : 'show');
    $(a1).show();
    $(a1).html(a1UUUU.P1("c349") ? "" : "");
    $(a1UUUU.O1("828a") ? "" : '#selectedoutput').hide(); var Z = a1UUUU.Y1("9d7a") ? 0 : 5; var Q = a1UUUU.A1("ff3a") ? 0 : 7; var a = new Object();
    $.each(warehouses, function(r, W) { a1UUUU.Q5 = function(a) { for (; a1UUUU;) return a1UUUU.j1(a); };
        a1UUUU.F1 = function(a) { for (; a1UUUU;) return a1UUUU.w1(a); }; if (W == (a1UUUU.S1("458d") ? "" : "1")) { Q++;
            $.ajax({ async: false, type: "GET", url: a1UUUU.v1 + r + (a1UUUU.F1("e524") ? "/stock/storageLocations" : ""), headers: { "Authorization": (a1UUUU.a5("5cd9") ? "Bearer " : "") + localStorage.getItem("accessToken") }, data: { variationId: variationId }, success: function(C) { var z1 = '.whname[whid='; var s = a1UUUU.Z5("5323") ? 0 : 1; var v = "<p style='color: white; text-align: center; background-color: #008EBD; width: auto;'>Lager: " + $(z1 + r + (a1UUUU.Q5("4432") ? ']' : "")).text() + "</p><table class='table'><thead><th>LagerortId</th><th>Lagerort</th><th>Menge</th><th>Aktion</th></thead><tbody>";
                    $.each(C.entries, function() { if (this.quantity > 0) { s = s + 1;
                            Z = Z + 1;
                            a[this.storageLocationId] = new Object();
                            a[this.storageLocationId] = r;
                            v = v + "<tr><td>" + this.storageLocationId + "</td><td class='place' sid='" + this.storageLocationId + "'></td><td>" + this.quantity + "</td><td><span value='Umbuchen' id='umbuchen_" + this.storageLocationId + "' class='btn umbuchenbutton' sid='" + this.storageLocationId + "' wid='" + r + "' wname='" + $(z1 + r + ']').text() + "' qty='" + this.quantity + "' onclick='umbuchenbutton(" + this.storageLocationId + ");'><i class='material-icons'>done</i></span></td></tr>"; } });
                    v = v + "</tbody></table>"; if (s > 0) { $(y1).append(v);
                        getLocationName(a); } else { $(y1).append("<div class='find-false'><p>Für das Lager <b>" + $(z1 + r + ']').text() + "</b> wurde kein Eintrag gefunden</p></div>"); } } }); } }); if (Q == 0) { $(y1).html("<div class='find-false'><p>Bitte wählen Sie ein Lager aus.</p></div>");
        $('#load').modal('hide'); } }

function exportfreeplaces() { $('#load').modal('show'); var z = "data:text/csv;charset=utf-8,";
    z += "storageLocationId;storageLocationName" + "\n";
    $.each(returnfreeplaces("1"), function(y, V) { z += V[0] + ";" + V[1] + "\n"; }); var t = encodeURI(z); var g = document.createElement("a");
    g.setAttribute("href", t);
    g.setAttribute("download", "export.csv");
    document.body.appendChild(g);
    g.click();
    $('#load').modal('hide'); }

function getfreeplaces(e) { var T1 = "9999999";
    filledplaces = new Object();
    freeplaces = new Object();
    places = new Object();
    $.ajax({ type: "GET", url: a1UUUU.v1 + e + "/stock/storageLocations", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { itemsPerPage: T1 }, success: function(d) { $.each(d.entries, function() { if (this.quantity > 0) { filledplaces[this.storageLocationId] = new Object();
                    filledplaces[this.storageLocationId] = 1; } }); var T = 4; var u = 0;
            $.ajax({ type: "GET", url: a1UUUU.v1 + e + "/management/storageLocations", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { itemsPerPage: T1 }, success: function(H) { $.ajax({ type: "GET", url: a1UUUU.v1 + e + "/management/racks", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { itemsPerPage: T1 }, success: function(b) { var o = "<select id='freeplacesracks'><option value='all'>Alle</option>";
                            $.each(b.entries, function() { o = o + "<option value='" + this.id + "'>" + this.name + "</option>";
                                $.ajax({ type: "GET", url: a1UUUU.v1 + e + "/management/racks/" + this.id + "/shelves", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, data: { itemsPerPage: T1 }, success: function(B) { $.each(B.entries, function() { shelves[this.id] = new Object();
                                            shelves[this.id] = this; }); } }); });
                            o = o + "</select><script>$(document).ready(function(){$('#freeplacesracks').change( function(){changeregal($(this).val());});});</script>";
                            $('#rackselect').html(o);
                            alert("Berechnung erfolgreich."); } });
                    $.each(H.entries, function() { places[this.id] = new Object();
                        places[this.id] = { name: this.name, type: this.type, rack: this.rackId, shelf: this.shelfId }; });
                    $.each(places, function(n, X) { if (typeof filledplaces[n] != "undefined") {} else { freeplaces[n] = new Object();
                            freeplaces[n] = X; } }); } }); } }); }

function changeregal(E) { var x = "<select id='shelvselects' ><option value='all'>Alle</option>";
    $.each(shelves, function() { if (this.rackId == E) { x = x + "<option value='" + this.id + "'>" + this.name + "</option>"; } });
    x = x + "</select>";
    $('#shelvselect').html(x); }

function getwarehouses() { var p = "";
    $.ajax({ async: false, type: "GET", url: "/rest/stockmanagement/warehouses", headers: { "Authorization": "Bearer " + localStorage.getItem("accessToken") }, success: function(K) { var m = "<select id='freeplaceswarehouses'>";
            $.each(K, function() { m = m + "<option value='" + this.id + "'>" + this.name + "</option>"; });
            m = m + "</select>";
            $('#warehousesselect').html(m); }, error: function(c) {} }); }

function returnfreeplaces(D = "0") { var E1 = '#freeplacesausgabe'; if (Object.keys(places).length > 0) { var w = $('#freeplaceslimit').val(); var h = $('#freeplacestype').val(); var I = $('#freeplacesracks').val(); var M = $('#shelvselects').val(); var l = 0; var U = 0; var i = "<hr><table class='table table-striped'><th>storageLocationId</th><th>storageLocationName</th>"; var q = new Object();
        $.each(freeplaces, function(j, L) { var X1 = "</td></tr>"; var n1 = "</td><td>"; var B1 = "all"; if (l == w) { return false; } if (I == B1 && M == B1 && h == B1) { l++;
                U++;
                i = i + "<tr><td>" + j + n1 + L.name + X1;
                q[U] = new Object();
                q[U] = [j, L.name]; } else if (I == B1 && M == B1 && h != B1) { if (L.type == h) { l++;
                    U++;
                    i = i + "<tr><td>" + j + n1 + L.name + X1;
                    q[U] = new Object();
                    q[U] = [j, L.name]; } } else if (I == B1 && M != B1 && h == B1) { if (L.shelf == M) { l++;
                    U++;
                    i = i + "<tr><td>" + j + n1 + L.name + X1;
                    q[U] = new Object();
                    q[U] = [j, L.name]; } } else if (I != B1 && M == B1 && h == B1) { if (L.rack == I) { l++;
                    U++;
                    i = i + "<tr><td>" + j + n1 + L.name + X1;
                    q[U] = new Object();
                    q[U] = [j, L.name]; } } else if (I == B1 && M != B1 && h != B1) { if (L.shelf == M && L.type == h) { l++;
                    U++;
                    i = i + "<tr><td>" + j + n1 + L.name + X1;
                    q[U] = new Object();
                    q[U] = [j, L.name]; } } else if (I != B1 && M != B1 && h == B1) { if (L.shelf == M && L.rack == I) { l++;
                    U++;
                    i = i + "<tr><td>" + j + n1 + L.name + X1;
                    q[U] = new Object();
                    q[U] = [j, L.name]; } } else if (I != B1 && M == B1 && h != B1) { if (L.rack == I && L.type == h) { l++;
                    U++;
                    i = i + "<tr><td>" + j + n1 + L.name + X1;
                    q[U] = new Object();
                    q[U] = [j, L.name]; } } else if (I != B1 && M != B1 && h != B1) { if (L.shelf == M && L.rack == I && L.type == h) { l++;
                    U++;
                    i = i + "<tr><td>" + j + n1 + L.name + X1;
                    q[U] = new Object();
                    q[U] = [j, L.name]; } } });
        i = i + "</table>"; if (D == "0") { if (U > 0) { $(E1).html(i); } else { $(E1).html("<hr><p style='color: red;'>Keine Lagerorte gefunden.</p>"); } } return q; } else { alert("Bitte berechnen Sie zuerst Ihre freien Lagerorte"); } }

function togglefreielagerorte() { $('#freeplacesdialog').dialog("open"); }

function deletefreeplace(k) { delete freeplaces[k];
    returnfreeplaces(); }
$(document).ready(function() { var m1 = '.warehousecheckbox'; var p1 = '#error_body';
    getwarehouses();
    $(document).ajaxStart(function() { $(p1).html("");
        $('#load').modal('show'); }).ajaxStop(function() { $('#load').modal('hide'); }).ajaxError(function(J) { var N = $.parseJSON(J.responseText);
        $(p1).append("<div class='find-false'><p>ErrorCode: " + N.error.code + " <br/> Message: " + N.error.message + "</p></div>");
        $('#error_modal').modal('show'); });
    $(m1).change(function() { var c1 = ":disabled";
        $(m1).each(function() { var f = 0; if ($(this).is(":checked")) { f = 1; }
            warehouses[$(this).attr('whid')] = new Object();
            warehouses[$(this).attr('whid')] = f; }); if ($('.findarticle').is(c1) && $('#menu_var').text() == "umbuchen" && $('.locationean').is(c1)) { $('#load').modal('show');
            setTimeout(function() { findPlaces(); }, 20); } });
    $('#togglemenu').click(function() { var i1 = '#freeplacessettings'; var R = $(this).attr("act"); if (R == "1") { $(i1).fadeOut(100);
            $(this).val("Menü einblenden");
            $(this).attr("act", "0"); } else { $(i1).fadeIn(100);
            $(this).val("Menü ausblenden");
            $(this).attr("act", "1"); } });
    $('.menutip').click(function() { window.location = $(this).attr('href'); });
    $('.ueberschnitt').click(function() { $('.ueberschnittmessage').fadeOut(200);
        $(this).fadeOut(200); });
    $('.calcfreeplaces').click(function() { getfreeplaces($('#freeplaceswarehouses').val()); });
    $('.showplaces').click(function() { returnfreeplaces(); });
    $('.export').click(function() { exportfreeplaces(); });
    setInterval(function() { var h1 = "pins"; var q1 = '#loadingpins'; var G = $(q1).attr(h1); switch (G) {
            case "0":
                $(q1).text(".");
                $(q1).attr(h1, "1"); break;
            case "1":
                $(q1).text("..");
                $(q1).attr(h1, "2"); break;
            case "2":
                $(q1).text("...");
                $(q1).attr(h1, "3"); break;
            case "3":
                $(q1).text("....");
                $(q1).attr(h1, "0"); break; } }, 500); });